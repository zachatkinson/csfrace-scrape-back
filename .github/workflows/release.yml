name: Semantic Release

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false  # Don't cancel releases

env:
  PYTHON_VERSION: "3.13"
  UV_VERSION: "0.8.13"

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    timeout-minutes: 20
    # Only run if CI was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: false
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true
      
      - name: Install dependencies
        run: |
          uv sync --group dev
      
      - name: Install python-semantic-release
        run: |
          uv add --group dev python-semantic-release
      
      - name: Build package
        run: |
          echo "üì¶ Building Python package..."
          uv build
          
          # Verify build
          ls -la dist/
          echo "‚úÖ Package build completed"
      
      - name: Run python-semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üöÄ Running Python semantic release..."
          echo "‚úÖ CI Pipeline was successful - proceeding with release"
          uv run semantic-release version --print
          uv run semantic-release publish
      
      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            dist/
            CHANGELOG.md
          retention-days: 30
      
      - name: Post-release cleanup
        if: always()
        run: |
          echo "üßπ Cleaning up temporary files..."
          echo "‚úÖ Cleanup completed (python-semantic-release handles cleanup automatically)"

  # Notify when release is skipped due to CI failure
  notify-skip:
    name: Notify Release Skip
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    
    steps:
      - name: Report CI failure
        run: |
          echo "‚ö†Ô∏è Semantic Release skipped - CI Pipeline failed!"
          echo "Fix CI issues before releases can proceed."
          echo "Failed workflow: ${{ github.event.workflow_run.html_url }}"