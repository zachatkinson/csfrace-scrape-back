name: Semantic Release

on:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false  # Don't cancel releases in progress
    # Only run if CI workflow completed successfully
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      id-token: write  # For provenance
      contents: write  # For creating releases
      issues: write    # For creating issues
      pull-requests: write  # For creating PRs
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for semantic release
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Wait for CI to complete
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.sha }}
          check-name: 'Consolidated CI/CD & Submodule Sync'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          
      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@v9.21.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          root_options: "-vv"  # Very verbose mode for detailed traceback
          
      - name: Create release success summary
        if: success()
        run: |
          echo "## âœ… Semantic Release Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** Release created successfully" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¦ Release Details" >> $GITHUB_STEP_SUMMARY
          echo "Check the [Releases page](https://github.com/${{ github.repository }}/releases) for the new release." >> $GITHUB_STEP_SUMMARY