name: Semantic Release

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches:
      - master

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency: release  # Prevent concurrent releases
    # Only run if CI was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      id-token: write  # For provenance
      contents: write  # For creating releases
      issues: write    # For creating issues
      pull-requests: write  # For creating PRs
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for semantic release
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install UV (for build command)
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@v9.21.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Additional configuration comes from pyproject.toml

  # Notify when release is skipped due to CI failure
  notify-skip:
    name: Notify Release Skip
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    
    steps:
      - name: Report CI failure
        run: |
          echo "⚠️ Semantic Release skipped - CI Pipeline failed!"
          echo "Fix CI issues before releases can proceed."
          echo "Failed workflow: ${{ github.event.workflow_run.html_url }}"